---
import Chart from "@/components/Chart.astro";
import type { ChartOptions } from "chart.js";
import Layout from "@/layouts/Layout.astro";
import { checkAdmin } from "@/lib/checkAdmin";
import { createDataset } from "@/utils/chart";
import { getSession } from "auth-astro/server";
import { SALTO_BROADCASTER_ID } from "@/config";
import {
  LucideArrowRight,
  LucideBell,
  LucideCalendar,
  LucideTrendingUpDown,
  LucideTrophy,
  LucideUsers,
} from "lucide-preact";
import WarsCurrentInscriptions from "@/components/admin/WarsCurrentInscriptions.astro";
import { CinematicLauncher } from "@/components/admin/CinematicLauncher";
import AdminLayout from "@/layouts/AdminLayout.astro";
import { getSiteStats } from "@/utils/site-admin";

const session = await getSession(Astro.request);

// Si la función `checkAdmin` retorna un `Response`, deberías manejarlo explícitamente:
const checkResult = await checkAdmin(session);
if (checkResult) {
  // Manejar la respuesta retornada (404 en este caso).
  return checkResult;
}

const fillMissingDays = (byDay: { day: string; value: number }[]) => {
  const startDate = new Date(byDay[0].day);
  const endDate = new Date(byDay[byDay.length - 1].day);
  const completeDays: { day: string; value: number }[] = [];

  for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
    const dayString = d.toISOString().split("T")[0];
    const existing = byDay.find((entry) => entry.day === dayString);
    completeDays.push({ day: dayString, value: existing ? existing.value : 0 });
  }

  return completeDays;
};

const visitorStats = await fetch(
  "https://librecounter.org/saltouruguayserver.com/siteStats"
).then((res) => res.json());

const completeByDay = fillMissingDays(visitorStats.byDay);

const data = {
  labels: completeByDay.map((stat) => stat.day),
  datasets: [
    createDataset({
      label: "Visitas",
      data: completeByDay.map((stat) => stat.value),
      borderColor: "rgb(255, 255, 255)",
      backgroundColor: "rgba(255, 255, 255, 0.2)",
      borderWidth: 2,
      tension: 0.2,
      fill: true,
    }),
  ],
};

const chartOptions: Partial<ChartOptions> = {
  responsive: true,
  interaction: {
    intersect: false,
    mode: "index",
  },
  plugins: {
    legend: {
      display: false,
    },
  },
};

const stats = await getSiteStats();

const BEAUTIFIED_STATS = [
  {
    id: "total-users",
    icon: LucideUsers,
    title: "Usuarios totales",
    value: stats.totalUsers,

    percentage:
      stats.newSignupsWeek === 0
        ? 0
        : stats.totalUsers > stats.newSignupsWeek
          ? Math.round(
              (stats.newSignupsWeek /
                (stats.totalUsers - stats.newSignupsWeek)) *
                100
            )
          : -100,

    percentageText:
      stats.newSignupsWeek === 0
        ? "igual que la semana pasada"
        : stats.totalUsers > stats.newSignupsWeek
          ? "más que la semana pasada"
          : "menos que la semana pasada",
  },
  {
    id: "new-signups",
    icon: LucideBell,
    title: "Nuevos usuarios",
    value: stats.newSignupsWeek,
    description: "Nuevos usuarios registrados en la última semana",
  },
  /* 
    Por ahora, son placeholders, ya que no hay sistema de torneos y eventos
  */
  {
    id: "active-events",
    icon: LucideCalendar,
    title: "Eventos activos",
    value: 0,
    description: "0 eventos próximos",
  },
  {
    id: "active-tournaments",
    icon: LucideTrophy,
    title: "Torneos activos",
    value: 0,
    description: "0 torneos activos",
  },
];
---

<AdminLayout title="Administrador" session={session}>
  <div class="flex flex-col max-w-5xl mx-auto min-h-screen mt-16 pb-16">
    <div
      class="px-4 py-2 bg-gradient-to-br from-blue-500/40 to-blue-900/40 rounded-lg shadow-lg mb-8"
    >
      <h2 class="text-xl font-medium text-white mix-blend-screen">
        Bienvenido al nuevo panel de administración
      </h2>
      <p class="text-white/70 mb-4">
        El panel de administración ha sido renovado y ahora es más fácil de
        usar.
      </p>
    </div>

    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-4 mb-8">
      {
        BEAUTIFIED_STATS.map((stat) => (
          <div class="bg-neutral-900/50 rounded-lg p-4 border border-white/10 shadow-md">
            <div class="space-y-1.5 p-6 flex flex-row items-center justify-between pb-2">
              <h3 class="tracking-tight text-sm font-medium flex gap-x-1 items-center">
                <stat.icon class="size-4 text-white" />
                <span class="ml-2">{stat.title}</span>
              </h3>
            </div>
            <div class="p-6 pt-0">
              <div class="text-2xl font-bold">{stat.value}</div>
            </div>
            <p class="text-xs text-neutral-600 flex items-center gap-1 mt-1">
              {stat.percentage !== undefined && stat.percentage !== null ? (
                <span
                  class={
                    stat.percentage > 0
                      ? "text-green-400"
                      : stat.percentage < 0
                        ? "text-red-400"
                        : "text-gray-400"
                  }
                >
                  <LucideTrendingUpDown class="inline-block align-middle w-4 h-4 mr-1" />
                  {stat.percentage > 0 ? "+" : ""}
                  {stat.percentage}% {stat.percentageText}
                </span>
              ) : null}
              {stat.description && (
                <span class="text-neutral-400">{stat.description}</span>
              )}
            </p>
          </div>
        ))
      }
    </div>

    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-7">
      <div
        class="bg-neutral-900/50 rounded-lg p-4 border border-white/10 shadow-md lg:col-span-4"
      >
        <h3 class="text-xl font-bold text-white">Estadísticas de visitas</h3>
        <p class="text-white/70 mb-4 text-sm">Visitas a la página por día</p>
        <Chart data={data} chartOptions={chartOptions} />
      </div>
    </div>
  </div>
</AdminLayout>
