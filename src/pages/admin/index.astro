---
import Chart from "@/components/Chart.astro";
import type { ChartOptions } from "chart.js";
import Layout from "@/layouts/Layout.astro";
import { checkAdmin } from "@/lib/checkAdmin";
import { createDataset } from "@/utils/chart";
import { getSession } from "auth-astro/server";
import { SALTO_BROADCASTER_ID } from "@/config";
import { LucideArrowRight, LucideBell } from "lucide-preact";
import NomineesLiveNow from "@/components/NomineesLiveNow.astro";
import WarsCurrentInscriptions from "@/components/admin/WarsCurrentInscriptions.astro";
import { UsersManager } from "@/components/admin/UsersManager";
import { CinematicLauncher } from "@/components/admin/CinematicLauncher";
import { getNegativeVotes } from "@/utils/streamer-wars";

const session = await getSession(Astro.request);

// Si la función `checkAdmin` retorna un `Response`, deberías manejarlo explícitamente:
const checkResult = await checkAdmin(session);
if (checkResult) {
  // Manejar la respuesta retornada (404 en este caso).
  return checkResult;
}

const visitorStats = await fetch(
  "https://librecounter.org/saltouruguayserver.com/siteStats"
).then((res) => res.json());

const data = {
  labels: visitorStats.byDay.map((stat: any) => stat.day),
  datasets: [
    createDataset({
      label: "Visitas",
      data: visitorStats.byDay.map((stat: any) => stat.value),
      borderColor: "rgb(75, 192, 192)",
      tension: 0.2,
      fill: true,
    }),
  ],
};

const negativeVotes = await getNegativeVotes();

const chartOptions: Partial<ChartOptions> = {
  responsive: true,
  interaction: {
    intersect: false,
    mode: "index",
  },
  plugins: {
    legend: {
      display: false,
    },
  },
};
---

<Layout title="Administrador">
  <div class="flex flex-col max-w-5xl mx-auto min-h-screen mt-16">
    <header class="relative z-10 flex flex-col justify-center h-full">
      <div class="flex items-center gap-x-4">
        <div
          class="relative animate-fade-in-up"
          style="--floating-duration: 5000ms"
        >
          <img
            src="/images/logo_salto.webp"
            alt="SaltoUruguayServer"
            class="size-20 md:size-24 w-auto object-contain aspect-square animate-sink animate-iteration-count-infinite animate-duration-[var(--floating-duration)] saturate-150"
          />
          <img
            src="/images/logo_salto.webp"
            alt="SaltoUruguayServer"
            class="absolute blur-md brightness-125 saturate-200 inset-0 size-20 md:size-24 w-auto object-contain aspect-square z-[-1] animate-sink animate-iteration-count-infinite animate-duration-[var(--floating-duration)]"
          />
        </div>
        <h1
          class="text-3xl animate-fade-in-up animate-delay-150 font-rubik tracking-wider uppercase font-bold text-white mix-blend-screen"
        >
          Administrador
        </h1>
      </div>

      <h2
        class="text-lg animate-fade-in-up animate-delay-300 font-rubik uppercase text-white mix-blend-screen my-5"
      >
        Hola, <span class="text-blue-400">{session?.user.name}</span>!
      </h2>
    </header>

    <a class="relative rounded-lg mt-8 mb-8" href="/admin/guerra-streamers">
      <img
        src="/images/ads/stream-wars.webp"
        class="absolute inset-0 w-full h-full object-cover object-left-bottom -z-10 rounded-lg"
        alt="Stream Wars"
      />
      <div
        class="group bg-gradient-to-t flex items-center from-black/60 to-black/20 rounded-lg p-8"
      >
        <h3
          class="text-2xl text-white font-teko group-hover:underline duration-300 ease-in-out group-hover:translate-x-5 transition-all"
        >
          <LucideArrowRight class="inline-block align-middle w-6 h-6 mr-2" />
          Moderar Guerra de Streamers
        </h3>
        <p class="text-white/70 mb-4"></p>
      </div>
    </a>

    {
      negativeVotes && (
        <table class="w-full bg-black/50 rounded-lg p-4 mb-8">
          <thead>
            <tr>
              <th class="text-white text-left p-2">Streamer</th>
              <th class="text-white text-center p-2">Votos negativos</th>
              <th class="text-white text-center p-2">Porcentaje</th>
            </tr>
          </thead>
          <tbody>
            {(() => {
              const totalVotes = negativeVotes.reduce(
                (acc, { votes }) => acc + votes,
                0
              );
              return negativeVotes.map(
                ({ playerNumber, avatar, displayName, votes }) => {
                  const percentage = totalVotes
                    ? (votes / totalVotes) * 100
                    : 0;

                  return (
                    <tr>
                      <td class="text-white flex items-center p-2">
                        <img
                          src={avatar}
                          alt={displayName}
                          class="w-8 h-8 rounded-full mr-2"
                        />
                        <span>
                          #{playerNumber?.toString().padStart(3, "0")}
                        </span>
                        <span class="ml-2">{displayName}</span>
                      </td>
                      <td class="text-white text-center p-2">{votes}</td>
                      <td class="p-2">
                        <div class="relative w-full bg-gray-700  h-4">
                          <div
                            class="bg-lime-500 h-4 text-xs flex items-center justify-center text-white font-bold"
                            style={{ width: `${percentage}%` }}
                          >
                            {percentage.toFixed(1)}%
                          </div>
                        </div>
                      </td>
                    </tr>
                  );
                }
              );
            })()}
          </tbody>
        </table>
      )
    }

    <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
      <div class="bg-black/50 rounded-lg p-4">
        <h3 class="text-xl font-bold text-white">Estadísticas de visitas</h3>
        <p class="text-white/70 mb-4">
          Estadísticas de visitas a la página por día.
        </p>
        <Chart data={data} chartOptions={chartOptions} />
      </div>
      <div class="bg-black/50 rounded-lg p-4">
        <WarsCurrentInscriptions server:defer />
      </div>

      <!--       <div class="bg-black/50 rounded-lg p-4">
        <UsersManager client:idle />
      </div> -->

      <CinematicLauncher client:idle />
    </div>
  </div>
</Layout>
