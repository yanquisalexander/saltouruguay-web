---
import PageBreadcrumb from "@/components/PageBreadcrumb.astro";
import Layout from "@/layouts/Layout.astro";
import { getPaginatedEvents } from "@/lib/events";
import { EventCard } from "@/components/EventCard.tsx";

const { events } = await getPaginatedEvents(1, 10);
const firstFeaturedEvent = events.find((event) => event.featured);

const eventsWithoutFirstFeaturedEvent = events.filter(
  (event) => event.id !== firstFeaturedEvent?.id
);
---

<Layout
  title="Eventos"
  description="Participa en nuestros eventos exclusivos y conéctate con la comunidad"
>
  <div class="flex flex-col max-w-7xl mx-auto min-h-screen mt-16 px-4 sm:px-6">
    <header class="mb-8">
      <PageBreadcrumb
        breadcrumbs={[{ text: "Eventos", href: "/eventos" }]}
        pathname="/eventos"
      />
      <h1 class="text-3xl font-rubik font-medium tracking-tight">
        Eventos de la Comunidad
      </h1>
      <p class="text-neutral-500 mt-1">
        Participa en nuestros eventos exclusivos y conéctate con la comunidad
      </p>
    </header>

    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {
        firstFeaturedEvent && (
          <EventCard
            event={firstFeaturedEvent}
            index={1}
            firstFeaturedEvent={true}
            client:only="preact"
          />
        )
      }

      <!--
        Resto de eventos, excluyendo el primero destacado
      -->
      {
        eventsWithoutFirstFeaturedEvent &&
          eventsWithoutFirstFeaturedEvent.length > 0 &&
          eventsWithoutFirstFeaturedEvent.map((event, index) => (
            <EventCard event={event} index={index + 1} client:only="preact" />
          ))
      }
    </div>
  </div>
</Layout>
