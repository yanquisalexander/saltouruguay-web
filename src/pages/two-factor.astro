---
// OTP.astro
import Layout from "@/layouts/Layout.astro";
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

if (!session) {
  return new Response(null, {
    status: 404,
  });
}

// Aquí podrías agregar lógica adicional, por ejemplo, redirigir si el usuario ya está verificado
---

<Layout title="Verificación de OTP" hideFooter hideHeader>
  <div
    class="bg-black/20 rounded-2xl mt-32 p-8 flex flex-col items-center border border-white/20 ring-4 ring-black/20 border-dotted mx-auto max-w-md"
  >
    <img src="/favicon.svg" alt="Logo" class="h-16 w-16 mx-auto mb-4" />
    <h1 class="text-xl mb-4 font-rubik font-medium">Verifica tu código OTP</h1>
    <p class="text-center text-gray-200 mb-4">
      Ingresa el código OTP que te proporcionó tu aplicación autenticadora.
    </p>
    <form id="otp-form" class="w-full flex flex-col gap-4">
      <input
        type="text"
        id="otp-code"
        placeholder="Código OTP (6 dígitos)"
        class="w-full p-2 rounded-md border border-gray-300 bg-black/20 text-white text-center"
        maxlength="6"
        required
      />
      <button
        type="submit"
        id="otp-button"
        class="bg-blue-500 p-2 rounded-md text-white hover:bg-blue-600 transition"
      >
        Verificar OTP
      </button>
    </form>
    <p class="text-center text-gray-200 mt-4">
      Si tienes problemas, contacta con soporte.
    </p>
  </div>
</Layout>

<script>
  import { $ } from "@/lib/dom-selector";
  import type { ActionError } from "astro:actions";
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";
  import { toast } from "sonner";

  document.addEventListener("astro:page-load", () => {
    const otpForm = $("#otp-form");
    const otpCodeInput = $("#otp-code") as HTMLInputElement;

    if (!otpForm || !otpCodeInput) return;

    otpForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const otpCode = otpCodeInput.value.trim();

      // Validación básica: comprobamos que el OTP tenga 6 dígitos
      if (otpCode.length !== 6) {
        return toast.error("El código OTP debe tener 6 dígitos.");
      }

      try {
        // Enviamos la verificación del OTP a una acción del servidor
        toast.promise(
          actions.users.twoFactor.verifyTwoFactor({ code: otpCode }),
          {
            loading: "Verificando OTP...",
            success: "Código OTP verificado con éxito.",
            error: (err: ActionError) =>
              `Error al verificar OTP: ${err.message}`,
          }
        );

        // Si la verificación es exitosa, redirigimos a la página principal o al dashboard
        navigate("/");
      } catch (err) {
        toast.error("Error inesperado al verificar el OTP.");
      }
    });
  });
</script>
