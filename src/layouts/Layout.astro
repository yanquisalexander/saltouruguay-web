---
import { ViewTransitions } from "astro:transitions";
import type { Preload } from "@/types/Preload";
import SEO from "@/components/SEO.astro";
//import "@/assets/styles/sonner-style.css";
import LoadingIndicator from "astro-loading-indicator/component";
import { getSession } from "auth-astro/server";
import { Toaster } from "sonner";
import "@/assets/styles/sonner-styles.css";
import "@/assets/styles/global.css";

import "@fontsource/anton";
import "@fontsource-variable/rubik";
import "@fontsource-variable/teko";

import anton from "@fontsource/anton/files/anton-latin-400-normal.woff2";
import teko from "@fontsource-variable/teko/files/teko-latin-wght-normal.woff2";
import rubik from "@fontsource-variable/rubik/files/rubik-latin-wght-normal.woff2";

import SiteFooter from "@/components/SiteFooter.astro";
import SiteHeader from "@/components/SiteHeader.astro";
import SignInModal from "@/components/SignInModal.astro";
import KonamiCode from "@/components/KonamiCode.astro";
import { DebugInfo } from "@/components/DebugInfo";
interface Props {
  title?: string;
  description?: string;
  preload?: Array<Preload>;
  canonical?: string;
  image?: string;
  hideHeader?: boolean;
  hideFooter?: boolean;
  mainClassname?: string;
}

//const session = await getSession(Astro.request);
if (!Astro.props.preload) Astro.props.preload = [];

const {
  title,
  description,
  preload,
  canonical,
  image,
  hideHeader,
  hideFooter,
  mainClassname = "px-6 sm:px-10",
} = Astro.props;

const session = await getSession(Astro.request);

preload?.push({
  href: "/favicon.svg",
  as: "image",
  type: "image/svg+xml",
  crossorigin: "anonymous",
});

preload?.push({
  href: anton,
  as: "font",
  type: "font/woff2",
  crossorigin: "anonymous",
});

preload?.push({
  href: teko,
  as: "font",
  type: "font/woff2",
  crossorigin: "anonymous",
});

preload?.push({
  href: rubik,
  as: "font",
  type: "font/woff2",
  crossorigin: "anonymous",
});
---

<!doctype html>
<html lang="es" class="scroll-smooth bg-[#060109]" data-theme="dark">
  <head>
    <SEO
      title={title}
      description={description}
      image={image}
      canonical={canonical}
      preload={preload}
    />
    <ViewTransitions />
    <LoadingIndicator color="#1f97ff" height="3px" />
    <!-- <meta
      id="current-user-data"
      data-user={JSON.stringify({ user: session?.user || null })}
    /> -->
  </head>
  <body
    class="bg-repeat text-white overflow-x-hidden font-sans bg-[url(https://www.alexitoo.dev/bg.svg)] bg-cover"
  >
    {!hideHeader && <SiteHeader session={session} />}

    <main class={mainClassname}>
      <slot />
    </main>
    <SignInModal />
    {!hideFooter && <SiteFooter />}
    <style is:global>
      @font-face {
        font-family: "Atomic Marker";
        font-style: normal;
        font-weight: 100 900;
        font-display: swap;
        src: url("/fonts/set-sail-studios-atomic-marker-regular.woff2")
          format("woff2");
      }

      @font-face {
        font-family: "Atomic Marker Extras";
        font-style: normal;
        font-weight: 100 900;
        font-display: swap;
        src: url("/fonts/set-sail-studios-atomic-marker-extras.woff2")
          format("woff2");
      }
      html {
        font-family: "Jost Variable", system-ui, sans-serif;
      }

      body:has(dialog[open]) {
        @apply overflow-hidden;
      }

      body:has(.hide-scroll-page) {
        @apply overflow-hidden;
      }

      dialog {
        opacity: 0;
        transform: translateY(-5%);
        transition:
          all 0.3s ease-in-out,
          display 0.3s ease allow-discrete;
      }
      dialog::backdrop {
        background-color: rgba(0, 0, 0, 0.5);
      }

      dialog[open] + .dialog-background {
        display: block;
        position: fixed;
      }

      .dialog-background {
        display: none;
      }

      dialog[open] {
        @apply translate-y-0 transition-all duration-500 ease-in-out opacity-100;
        @starting-style {
          transform: translateY(-5%);
          opacity: 0;
        }
      }
    </style>

    <Toaster
      expand={true}
      theme="dark"
      client:only="preact"
      transition:name="global-toast"
      transition:persist
    />

    <KonamiCode />

    <DebugInfo client:load transition:name="debug-info" transition:persist />

    <script
      data-collect-dnt="true"
      async
      defer="true"
      src="https://scripts.simpleanalyticscdn.com/latest.js"></script>
    <noscript
      ><img
        src="https://queue.simpleanalyticscdn.com/noscript.gif?collect-dnt=true"
        alt=""
        referrerpolicy="no-referrer-when-downgrade"
      /></noscript
    >
  </body>
</html>
